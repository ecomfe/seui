<template>
    <div class="demo-toast">
        <p>
            <div class="toast-title">全局提示</div>
            <ui-button on-click="showToast('all')">全部</ui-button>
            <ui-button on-click="showToast('success')">成功</ui-button>
            <ui-button on-click="showToast('warn')">警告</ui-button>
            <ui-button on-click="showToast('info')">提醒</ui-button>
            <ui-button on-click="showToast('error')">错误</ui-button>
        </p>
    </div>
</template>

<script>
    import Button from '../../src/components/Button';
    import toast from '../../src/components/Toast';

    const messages = [
        {
            type: 'success',
            message: '恭喜您，您的请求已成功处理',
            duration: 2500
        },
        {
            type: 'warn',
            message: '警告，有法律风险存在',
            duration: 2000
        },
        {
            type: 'info',
            message: '提醒，请注意这个消息',
            duration: 1500
        },
        {
            type: 'error',
            message: '错误，请检查并修改后再提交',
            duration: 1000
        }
    ];

    export default {

        components: {
            'ui-button': Button
        },

        initData() {
            return {
                messages: messages
            };
        },

        attached() {
        },

        computed: {
            messageMap() {
                let messages = this.data.get('messages');
                let messageMap = messages.reduce((result, current) => {
                    result[current.type] = current;
                    return result;
                }, {});
                return messageMap;
            }
        },

        showToast(type) {
            if (type === 'all') {
                messages.forEach(({ type, message, duration }) => {
                    toast[type]({
                        message,
                        duration
                    });
                })
            }
            else {
                let messageMap = this.data.get('messageMap');
                // 返回当前消息
                let instanceToast = toast[type](messageMap[type].message);

                // 可以手动关闭消息
                setTimeout(() => {
                    toast.close(instanceToast);
                }, 1000);
            }
        }
    }
</script>

<style lang="less">
    .demo-toast {
        p {
            margin: 16px;
        }
        .toast-title {
            margin-bottom: 16px;
        }
    }
</style>
